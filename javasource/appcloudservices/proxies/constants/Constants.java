// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package appcloudservices.proxies.constants;

import com.mendix.core.Core;

public class Constants
{
	// These are the constants for the AppCloudServices module

	public static java.lang.String getAppCloudServicesVersion()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.AppCloudServicesVersion");
	}

	public static java.lang.Long getAuthRequestExpiryDurationInMinutes()
	{
		return (java.lang.Long)Core.getConfiguration().getConstantValue("AppCloudServices.AuthRequestExpiryDurationInMinutes");
	}

	public static java.lang.Long getDeleteTokenBatchSize()
	{
		return (java.lang.Long)Core.getConfiguration().getConstantValue("AppCloudServices.DeleteTokenBatchSize");
	}

	/**
	* Prefix for stored encrypted values.
	* This value is used to determine whether the value has been already encrypted.
	*/
	public static java.lang.String getEncryptionPrefix()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.EncryptionPrefix");
	}

	/**
	* This is the password which is used to communicate with the Mendix AppCloud Services. This password will be set automatically on deployment in the Mendix Cloud. 
	*/
	public static java.lang.String getEnvironmentPassword()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.EnvironmentPassword");
	}

	/**
	* This is the environment UUID which is used to communicate with the Mendix AppCloud Services to identify this application. This UUID will be set automatically on deployment in the Mendix Cloud. 
	*/
	public static java.lang.String getEnvironmentUUID()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.EnvironmentUUID");
	}

	public static java.lang.Long getIdTokenValidatorMaxClockSkew()
	{
		return (java.lang.Long)Core.getConfiguration().getConstantValue("AppCloudServices.IdTokenValidatorMaxClockSkew");
	}

	public static java.lang.String getIndexPage()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.IndexPage");
	}

	public static java.lang.String getInviteAPI_Location()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.InviteAPI_Location");
	}

	public static java.lang.String getLogNode()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.LogNode");
	}

	public static java.lang.String getOpenIdConnectDiscoveryPath()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.OpenIdConnectDiscoveryPath");
	}

	public static java.lang.String getOpenIdConnectProvider()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.OpenIdConnectProvider");
	}

	public static java.lang.String getOpenIdConnectScopes()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.OpenIdConnectScopes");
	}

	/**
	* This constant indicates whether Single Sign On through MxID will be performend whenever a user tries to access this app. This constant defaults to 'false' for local deployments and will be set to 'true' automatically upon deployment in the Mendix AppCloud. 
	* 
	* If enabled, the Single Sign On process can be initiated by navigating to "<App URL>/openid/login"
	*/
	public static boolean getOpenIdEnabled()
	{
		return (java.lang.Boolean)Core.getConfiguration().getConstantValue("AppCloudServices.OpenIdEnabled");
	}

	/**
	* This constant defines the location of the MxID provider in the AppCloud. This constant will be set by the Mendix AppCloud upon deployment.
	*/
	public static java.lang.String getOpenIdProvider()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.OpenIdProvider");
	}

	/**
	* This constant defines the location of the Permissions API provider in the AppCloud. This constant will be set by the Mendix AppCloud upon deployment.
	*/
	public static java.lang.String getPermissionsAPI_Location()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.PermissionsAPI_Location");
	}

	/**
	* This key will be used to encrypt and decrypt tokens.
	* The length of this key must be exactly 16 characters. For security purposes, we advise to change the defaullt value of this key.
	*/
	public static java.lang.String getTokenEncryptionKey()
	{
		return (java.lang.String)Core.getConfiguration().getConstantValue("AppCloudServices.TokenEncryptionKey");
	}

	/**
	* 30 days = 30 * 24 * 60*60 seonds
	* 
	* 2592000
	*/
	public static java.lang.Long getTokenExpiryInSeconds()
	{
		return (java.lang.Long)Core.getConfiguration().getConstantValue("AppCloudServices.TokenExpiryInSeconds");
	}
}